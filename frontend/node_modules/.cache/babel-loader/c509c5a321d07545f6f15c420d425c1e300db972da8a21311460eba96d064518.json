{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport EnterOutlined from \"@ant-design/icons/es/icons/EnterOutlined\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { cloneElement } from '../_util/reactNode';\nimport TextArea from '../input/TextArea';\nimport useStyle from './style';\nconst Editable = props => {\n  const {\n    prefixCls,\n    'aria-label': ariaLabel,\n    className,\n    style,\n    direction,\n    maxLength,\n    autoSize = true,\n    value,\n    onSave,\n    onCancel,\n    onEnd,\n    component,\n    enterIcon = /*#__PURE__*/React.createElement(EnterOutlined, null)\n  } = props;\n  const ref = React.useRef(null);\n  const inComposition = React.useRef(false);\n  const lastKeyCode = React.useRef();\n  const [current, setCurrent] = React.useState(value);\n  React.useEffect(() => {\n    setCurrent(value);\n  }, [value]);\n  React.useEffect(() => {\n    var _a;\n    if ((_a = ref.current) === null || _a === void 0 ? void 0 : _a.resizableTextArea) {\n      const {\n        textArea\n      } = ref.current.resizableTextArea;\n      textArea.focus();\n      const {\n        length\n      } = textArea.value;\n      textArea.setSelectionRange(length, length);\n    }\n  }, []);\n  const onChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setCurrent(target.value.replace(/[\\n\\r]/g, ''));\n  };\n  const onCompositionStart = () => {\n    inComposition.current = true;\n  };\n  const onCompositionEnd = () => {\n    inComposition.current = false;\n  };\n  const onKeyDown = _ref2 => {\n    let {\n      keyCode\n    } = _ref2;\n    // We don't record keyCode when IME is using\n    if (inComposition.current) return;\n    lastKeyCode.current = keyCode;\n  };\n  const confirmChange = () => {\n    onSave(current.trim());\n  };\n  const onKeyUp = _ref3 => {\n    let {\n      keyCode,\n      ctrlKey,\n      altKey,\n      metaKey,\n      shiftKey\n    } = _ref3;\n    // Check if it's a real key\n    if (lastKeyCode.current !== keyCode || inComposition.current || ctrlKey || altKey || metaKey || shiftKey) {\n      return;\n    }\n    if (keyCode === KeyCode.ENTER) {\n      confirmChange();\n      onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n    } else if (keyCode === KeyCode.ESC) {\n      onCancel();\n    }\n  };\n  const onBlur = () => {\n    confirmChange();\n  };\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const textAreaClassName = classNames(prefixCls, `${prefixCls}-edit-content`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-${component}`]: !!component\n  }, className, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: textAreaClassName,\n    style: style\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    ref: ref,\n    maxLength: maxLength,\n    value: current,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd,\n    onBlur: onBlur,\n    \"aria-label\": ariaLabel,\n    rows: 1,\n    autoSize: autoSize\n  }), enterIcon !== null ? cloneElement(enterIcon, {\n    className: `${prefixCls}-edit-content-confirm`\n  }) : null));\n};\nexport default Editable;","map":{"version":3,"names":["React","EnterOutlined","classNames","KeyCode","cloneElement","TextArea","useStyle","Editable","props","prefixCls","ariaLabel","className","style","direction","maxLength","autoSize","value","onSave","onCancel","onEnd","component","enterIcon","createElement","ref","useRef","inComposition","lastKeyCode","current","setCurrent","useState","useEffect","_a","resizableTextArea","textArea","focus","length","setSelectionRange","onChange","_ref","target","replace","onCompositionStart","onCompositionEnd","onKeyDown","_ref2","keyCode","confirmChange","trim","onKeyUp","_ref3","ctrlKey","altKey","metaKey","shiftKey","ENTER","ESC","onBlur","wrapCSSVar","hashId","cssVarCls","textAreaClassName","rows"],"sources":["/Users/abhib/Documents/LlamaHackathon2024/timeline_of_me_frontend/node_modules/antd/es/typography/Editable.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport EnterOutlined from \"@ant-design/icons/es/icons/EnterOutlined\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { cloneElement } from '../_util/reactNode';\nimport TextArea from '../input/TextArea';\nimport useStyle from './style';\nconst Editable = props => {\n  const {\n    prefixCls,\n    'aria-label': ariaLabel,\n    className,\n    style,\n    direction,\n    maxLength,\n    autoSize = true,\n    value,\n    onSave,\n    onCancel,\n    onEnd,\n    component,\n    enterIcon = /*#__PURE__*/React.createElement(EnterOutlined, null)\n  } = props;\n  const ref = React.useRef(null);\n  const inComposition = React.useRef(false);\n  const lastKeyCode = React.useRef();\n  const [current, setCurrent] = React.useState(value);\n  React.useEffect(() => {\n    setCurrent(value);\n  }, [value]);\n  React.useEffect(() => {\n    var _a;\n    if ((_a = ref.current) === null || _a === void 0 ? void 0 : _a.resizableTextArea) {\n      const {\n        textArea\n      } = ref.current.resizableTextArea;\n      textArea.focus();\n      const {\n        length\n      } = textArea.value;\n      textArea.setSelectionRange(length, length);\n    }\n  }, []);\n  const onChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setCurrent(target.value.replace(/[\\n\\r]/g, ''));\n  };\n  const onCompositionStart = () => {\n    inComposition.current = true;\n  };\n  const onCompositionEnd = () => {\n    inComposition.current = false;\n  };\n  const onKeyDown = _ref2 => {\n    let {\n      keyCode\n    } = _ref2;\n    // We don't record keyCode when IME is using\n    if (inComposition.current) return;\n    lastKeyCode.current = keyCode;\n  };\n  const confirmChange = () => {\n    onSave(current.trim());\n  };\n  const onKeyUp = _ref3 => {\n    let {\n      keyCode,\n      ctrlKey,\n      altKey,\n      metaKey,\n      shiftKey\n    } = _ref3;\n    // Check if it's a real key\n    if (lastKeyCode.current !== keyCode || inComposition.current || ctrlKey || altKey || metaKey || shiftKey) {\n      return;\n    }\n    if (keyCode === KeyCode.ENTER) {\n      confirmChange();\n      onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n    } else if (keyCode === KeyCode.ESC) {\n      onCancel();\n    }\n  };\n  const onBlur = () => {\n    confirmChange();\n  };\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const textAreaClassName = classNames(prefixCls, `${prefixCls}-edit-content`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-${component}`]: !!component\n  }, className, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: textAreaClassName,\n    style: style\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    ref: ref,\n    maxLength: maxLength,\n    value: current,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd,\n    onBlur: onBlur,\n    \"aria-label\": ariaLabel,\n    rows: 1,\n    autoSize: autoSize\n  }), enterIcon !== null ? cloneElement(enterIcon, {\n    className: `${prefixCls}-edit-content-confirm`\n  }) : null));\n};\nexport default Editable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}