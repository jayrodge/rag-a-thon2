{"ast":null,"code":"import { useContext } from 'react';\nimport { VariantContext } from '../context';\nimport { ConfigContext, Variants } from '../../config-provider';\n/**\n * Compatible for legacy `bordered` prop.\n */\nconst useVariant = function (component, variant) {\n  let legacyBordered = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var _a, _b;\n  const {\n    variant: configVariant,\n    [component]: componentConfig\n  } = useContext(ConfigContext);\n  const ctxVariant = useContext(VariantContext);\n  const configComponentVariant = componentConfig === null || componentConfig === void 0 ? void 0 : componentConfig.variant;\n  let mergedVariant;\n  if (typeof variant !== 'undefined') {\n    mergedVariant = variant;\n  } else if (legacyBordered === false) {\n    mergedVariant = 'borderless';\n  } else {\n    // form variant > component global variant > global variant\n    mergedVariant = (_b = (_a = ctxVariant !== null && ctxVariant !== void 0 ? ctxVariant : configComponentVariant) !== null && _a !== void 0 ? _a : configVariant) !== null && _b !== void 0 ? _b : 'outlined';\n  }\n  const enableVariantCls = Variants.includes(mergedVariant);\n  return [mergedVariant, enableVariantCls];\n};\nexport default useVariant;","map":{"version":3,"names":["useContext","VariantContext","ConfigContext","Variants","useVariant","component","variant","legacyBordered","arguments","length","undefined","_a","_b","configVariant","componentConfig","ctxVariant","configComponentVariant","mergedVariant","enableVariantCls","includes"],"sources":["/Users/abhib/Documents/LlamaHackathon2024/timeline_of_me_frontend/node_modules/antd/es/form/hooks/useVariants.js"],"sourcesContent":["import { useContext } from 'react';\nimport { VariantContext } from '../context';\nimport { ConfigContext, Variants } from '../../config-provider';\n/**\n * Compatible for legacy `bordered` prop.\n */\nconst useVariant = function (component, variant) {\n  let legacyBordered = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var _a, _b;\n  const {\n    variant: configVariant,\n    [component]: componentConfig\n  } = useContext(ConfigContext);\n  const ctxVariant = useContext(VariantContext);\n  const configComponentVariant = componentConfig === null || componentConfig === void 0 ? void 0 : componentConfig.variant;\n  let mergedVariant;\n  if (typeof variant !== 'undefined') {\n    mergedVariant = variant;\n  } else if (legacyBordered === false) {\n    mergedVariant = 'borderless';\n  } else {\n    // form variant > component global variant > global variant\n    mergedVariant = (_b = (_a = ctxVariant !== null && ctxVariant !== void 0 ? ctxVariant : configComponentVariant) !== null && _a !== void 0 ? _a : configVariant) !== null && _b !== void 0 ? _b : 'outlined';\n  }\n  const enableVariantCls = Variants.includes(mergedVariant);\n  return [mergedVariant, enableVariantCls];\n};\nexport default useVariant;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,cAAc,QAAQ,YAAY;AAC3C,SAASC,aAAa,EAAEC,QAAQ,QAAQ,uBAAuB;AAC/D;AACA;AACA;AACA,MAAMC,UAAU,GAAG,SAAAA,CAAUC,SAAS,EAAEC,OAAO,EAAE;EAC/C,IAAIC,cAAc,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGE,SAAS;EAClG,IAAIC,EAAE,EAAEC,EAAE;EACV,MAAM;IACJN,OAAO,EAAEO,aAAa;IACtB,CAACR,SAAS,GAAGS;EACf,CAAC,GAAGd,UAAU,CAACE,aAAa,CAAC;EAC7B,MAAMa,UAAU,GAAGf,UAAU,CAACC,cAAc,CAAC;EAC7C,MAAMe,sBAAsB,GAAGF,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACR,OAAO;EACxH,IAAIW,aAAa;EACjB,IAAI,OAAOX,OAAO,KAAK,WAAW,EAAE;IAClCW,aAAa,GAAGX,OAAO;EACzB,CAAC,MAAM,IAAIC,cAAc,KAAK,KAAK,EAAE;IACnCU,aAAa,GAAG,YAAY;EAC9B,CAAC,MAAM;IACL;IACAA,aAAa,GAAG,CAACL,EAAE,GAAG,CAACD,EAAE,GAAGI,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAGA,UAAU,GAAGC,sBAAsB,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGE,aAAa,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,UAAU;EAC7M;EACA,MAAMM,gBAAgB,GAAGf,QAAQ,CAACgB,QAAQ,CAACF,aAAa,CAAC;EACzD,OAAO,CAACA,aAAa,EAAEC,gBAAgB,CAAC;AAC1C,CAAC;AACD,eAAed,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}