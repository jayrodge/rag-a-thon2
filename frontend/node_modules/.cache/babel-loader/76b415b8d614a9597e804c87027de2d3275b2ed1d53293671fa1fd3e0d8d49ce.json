{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { mergeToken } from '../../theme/internal';\nfunction genSizeStyle(token, suffix) {\n  const {\n    componentCls,\n    inputPaddingHorizontalBase,\n    borderRadius,\n    fontSizeIcon\n  } = token;\n  const selectHeightWithoutBorder = token.calc(token.controlHeight).sub(token.calc(token.lineWidth).mul(2)).equal();\n  const singleInputPaddingHorizontal = token.calc(inputPaddingHorizontalBase).add(fontSizeIcon).equal();\n  const suffixCls = suffix ? `${componentCls}-${suffix}` : '';\n  return {\n    [`${componentCls}-single${suffixCls}`]: {\n      fontSize: token.fontSize,\n      height: token.controlHeight,\n      // ========================= Selector =========================\n      [`${componentCls}-selector`]: Object.assign(Object.assign({}, resetComponent(token, true)), {\n        display: 'flex',\n        borderRadius,\n        [`${componentCls}-selection-search`]: {\n          position: 'absolute',\n          top: 0,\n          insetInlineStart: inputPaddingHorizontalBase,\n          insetInlineEnd: unit(singleInputPaddingHorizontal),\n          bottom: 0,\n          '&-input': {\n            width: '100%',\n            WebkitAppearance: 'textfield'\n          }\n        },\n        [`\n          ${componentCls}-selection-item,\n          ${componentCls}-selection-placeholder\n        `]: {\n          padding: 0,\n          lineHeight: unit(selectHeightWithoutBorder),\n          transition: `all ${token.motionDurationSlow}, visibility 0s`,\n          alignSelf: 'center'\n        },\n        [`${componentCls}-selection-placeholder`]: {\n          transition: 'none',\n          pointerEvents: 'none'\n        },\n        // For common baseline align\n        [['&:after', /* For '' value baseline align */\n        `${componentCls}-selection-item:empty:after`, /* For undefined value baseline align */\n        `${componentCls}-selection-placeholder:empty:after`].join(',')]: {\n          display: 'inline-block',\n          width: 0,\n          visibility: 'hidden',\n          content: '\"\\\\a0\"'\n        }\n      }),\n      [`\n        &${componentCls}-show-arrow ${componentCls}-selection-item,\n        &${componentCls}-show-arrow ${componentCls}-selection-placeholder\n      `]: {\n        paddingInlineEnd: token.showArrowPaddingInlineEnd\n      },\n      // Opacity selection if open\n      [`&${componentCls}-open ${componentCls}-selection-item`]: {\n        color: token.colorTextPlaceholder\n      },\n      // ========================== Input ==========================\n      // We only change the style of non-customize input which is only support by `combobox` mode.\n      // Not customize\n      [`&:not(${componentCls}-customize-input)`]: {\n        [`${componentCls}-selector`]: {\n          width: '100%',\n          height: '100%',\n          padding: `0 ${unit(inputPaddingHorizontalBase)}`,\n          [`${componentCls}-selection-search-input`]: {\n            height: selectHeightWithoutBorder\n          },\n          '&:after': {\n            lineHeight: unit(selectHeightWithoutBorder)\n          }\n        }\n      },\n      [`&${componentCls}-customize-input`]: {\n        [`${componentCls}-selector`]: {\n          '&:after': {\n            display: 'none'\n          },\n          [`${componentCls}-selection-search`]: {\n            position: 'static',\n            width: '100%'\n          },\n          [`${componentCls}-selection-placeholder`]: {\n            position: 'absolute',\n            insetInlineStart: 0,\n            insetInlineEnd: 0,\n            padding: `0 ${unit(inputPaddingHorizontalBase)}`,\n            '&:after': {\n              display: 'none'\n            }\n          }\n        }\n      }\n    }\n  };\n}\nexport default function genSingleStyle(token) {\n  const {\n    componentCls\n  } = token;\n  const inputPaddingHorizontalSM = token.calc(token.controlPaddingHorizontalSM).sub(token.lineWidth).equal();\n  return [genSizeStyle(token),\n  // ======================== Small ========================\n  // Shared\n  genSizeStyle(mergeToken(token, {\n    controlHeight: token.controlHeightSM,\n    borderRadius: token.borderRadiusSM\n  }), 'sm'),\n  // padding\n  {\n    [`${componentCls}-single${componentCls}-sm`]: {\n      [`&:not(${componentCls}-customize-input)`]: {\n        [`${componentCls}-selection-search`]: {\n          insetInlineStart: inputPaddingHorizontalSM,\n          insetInlineEnd: inputPaddingHorizontalSM\n        },\n        [`${componentCls}-selector`]: {\n          padding: `0 ${unit(inputPaddingHorizontalSM)}`\n        },\n        // With arrow should provides `padding-right` to show the arrow\n        [`&${componentCls}-show-arrow ${componentCls}-selection-search`]: {\n          insetInlineEnd: token.calc(inputPaddingHorizontalSM).add(token.calc(token.fontSize).mul(1.5)).equal()\n        },\n        [`\n            &${componentCls}-show-arrow ${componentCls}-selection-item,\n            &${componentCls}-show-arrow ${componentCls}-selection-placeholder\n          `]: {\n          paddingInlineEnd: token.calc(token.fontSize).mul(1.5).equal()\n        }\n      }\n    }\n  },\n  // ======================== Large ========================\n  // Shared\n  genSizeStyle(mergeToken(token, {\n    controlHeight: token.singleItemHeightLG,\n    fontSize: token.fontSizeLG,\n    borderRadius: token.borderRadiusLG\n  }), 'lg')];\n}","map":{"version":3,"names":["unit","resetComponent","mergeToken","genSizeStyle","token","suffix","componentCls","inputPaddingHorizontalBase","borderRadius","fontSizeIcon","selectHeightWithoutBorder","calc","controlHeight","sub","lineWidth","mul","equal","singleInputPaddingHorizontal","add","suffixCls","fontSize","height","Object","assign","display","position","top","insetInlineStart","insetInlineEnd","bottom","width","WebkitAppearance","padding","lineHeight","transition","motionDurationSlow","alignSelf","pointerEvents","join","visibility","content","paddingInlineEnd","showArrowPaddingInlineEnd","color","colorTextPlaceholder","genSingleStyle","inputPaddingHorizontalSM","controlPaddingHorizontalSM","controlHeightSM","borderRadiusSM","singleItemHeightLG","fontSizeLG","borderRadiusLG"],"sources":["/Users/abhib/Documents/LlamaHackathon2024/timeline_of_me_frontend/node_modules/antd/es/select/style/single.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { mergeToken } from '../../theme/internal';\nfunction genSizeStyle(token, suffix) {\n  const {\n    componentCls,\n    inputPaddingHorizontalBase,\n    borderRadius,\n    fontSizeIcon\n  } = token;\n  const selectHeightWithoutBorder = token.calc(token.controlHeight).sub(token.calc(token.lineWidth).mul(2)).equal();\n  const singleInputPaddingHorizontal = token.calc(inputPaddingHorizontalBase).add(fontSizeIcon).equal();\n  const suffixCls = suffix ? `${componentCls}-${suffix}` : '';\n  return {\n    [`${componentCls}-single${suffixCls}`]: {\n      fontSize: token.fontSize,\n      height: token.controlHeight,\n      // ========================= Selector =========================\n      [`${componentCls}-selector`]: Object.assign(Object.assign({}, resetComponent(token, true)), {\n        display: 'flex',\n        borderRadius,\n        [`${componentCls}-selection-search`]: {\n          position: 'absolute',\n          top: 0,\n          insetInlineStart: inputPaddingHorizontalBase,\n          insetInlineEnd: unit(singleInputPaddingHorizontal),\n          bottom: 0,\n          '&-input': {\n            width: '100%',\n            WebkitAppearance: 'textfield'\n          }\n        },\n        [`\n          ${componentCls}-selection-item,\n          ${componentCls}-selection-placeholder\n        `]: {\n          padding: 0,\n          lineHeight: unit(selectHeightWithoutBorder),\n          transition: `all ${token.motionDurationSlow}, visibility 0s`,\n          alignSelf: 'center'\n        },\n        [`${componentCls}-selection-placeholder`]: {\n          transition: 'none',\n          pointerEvents: 'none'\n        },\n        // For common baseline align\n        [['&:after', /* For '' value baseline align */\n        `${componentCls}-selection-item:empty:after`, /* For undefined value baseline align */\n        `${componentCls}-selection-placeholder:empty:after`].join(',')]: {\n          display: 'inline-block',\n          width: 0,\n          visibility: 'hidden',\n          content: '\"\\\\a0\"'\n        }\n      }),\n      [`\n        &${componentCls}-show-arrow ${componentCls}-selection-item,\n        &${componentCls}-show-arrow ${componentCls}-selection-placeholder\n      `]: {\n        paddingInlineEnd: token.showArrowPaddingInlineEnd\n      },\n      // Opacity selection if open\n      [`&${componentCls}-open ${componentCls}-selection-item`]: {\n        color: token.colorTextPlaceholder\n      },\n      // ========================== Input ==========================\n      // We only change the style of non-customize input which is only support by `combobox` mode.\n      // Not customize\n      [`&:not(${componentCls}-customize-input)`]: {\n        [`${componentCls}-selector`]: {\n          width: '100%',\n          height: '100%',\n          padding: `0 ${unit(inputPaddingHorizontalBase)}`,\n          [`${componentCls}-selection-search-input`]: {\n            height: selectHeightWithoutBorder\n          },\n          '&:after': {\n            lineHeight: unit(selectHeightWithoutBorder)\n          }\n        }\n      },\n      [`&${componentCls}-customize-input`]: {\n        [`${componentCls}-selector`]: {\n          '&:after': {\n            display: 'none'\n          },\n          [`${componentCls}-selection-search`]: {\n            position: 'static',\n            width: '100%'\n          },\n          [`${componentCls}-selection-placeholder`]: {\n            position: 'absolute',\n            insetInlineStart: 0,\n            insetInlineEnd: 0,\n            padding: `0 ${unit(inputPaddingHorizontalBase)}`,\n            '&:after': {\n              display: 'none'\n            }\n          }\n        }\n      }\n    }\n  };\n}\nexport default function genSingleStyle(token) {\n  const {\n    componentCls\n  } = token;\n  const inputPaddingHorizontalSM = token.calc(token.controlPaddingHorizontalSM).sub(token.lineWidth).equal();\n  return [genSizeStyle(token),\n  // ======================== Small ========================\n  // Shared\n  genSizeStyle(mergeToken(token, {\n    controlHeight: token.controlHeightSM,\n    borderRadius: token.borderRadiusSM\n  }), 'sm'),\n  // padding\n  {\n    [`${componentCls}-single${componentCls}-sm`]: {\n      [`&:not(${componentCls}-customize-input)`]: {\n        [`${componentCls}-selection-search`]: {\n          insetInlineStart: inputPaddingHorizontalSM,\n          insetInlineEnd: inputPaddingHorizontalSM\n        },\n        [`${componentCls}-selector`]: {\n          padding: `0 ${unit(inputPaddingHorizontalSM)}`\n        },\n        // With arrow should provides `padding-right` to show the arrow\n        [`&${componentCls}-show-arrow ${componentCls}-selection-search`]: {\n          insetInlineEnd: token.calc(inputPaddingHorizontalSM).add(token.calc(token.fontSize).mul(1.5)).equal()\n        },\n        [`\n            &${componentCls}-show-arrow ${componentCls}-selection-item,\n            &${componentCls}-show-arrow ${componentCls}-selection-placeholder\n          `]: {\n          paddingInlineEnd: token.calc(token.fontSize).mul(1.5).equal()\n        }\n      }\n    }\n  },\n  // ======================== Large ========================\n  // Shared\n  genSizeStyle(mergeToken(token, {\n    controlHeight: token.singleItemHeightLG,\n    fontSize: token.fontSizeLG,\n    borderRadius: token.borderRadiusLG\n  }), 'lg')];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}