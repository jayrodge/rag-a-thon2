{"ast":null,"code":"\"use client\";\n\nimport React from 'react';\nimport Divider from '../divider';\nimport PanelPicker from './components/PanelPicker';\nimport PanelPresets from './components/PanelPresets';\nimport { PanelPickerContext, PanelPresetsContext } from './context';\nconst ColorPickerPanel = props => {\n  const {\n    prefixCls,\n    presets,\n    panelRender,\n    value,\n    onChange,\n    onClear,\n    allowClear,\n    disabledAlpha,\n    mode,\n    onModeChange,\n    modeOptions,\n    onChangeComplete,\n    activeIndex,\n    onActive,\n    format,\n    onFormatChange,\n    gradientDragging,\n    onGradientDragging\n  } = props;\n  const colorPickerPanelPrefixCls = `${prefixCls}-inner`;\n  // ===================== Context ======================\n  const panelContext = React.useMemo(() => ({\n    prefixCls,\n    value,\n    onChange,\n    onClear,\n    allowClear,\n    disabledAlpha,\n    mode,\n    onModeChange,\n    modeOptions,\n    onChangeComplete,\n    activeIndex,\n    onActive,\n    format,\n    onFormatChange,\n    gradientDragging,\n    onGradientDragging\n  }), [prefixCls, value, onChange, onClear, allowClear, disabledAlpha, mode, onModeChange, modeOptions, onChangeComplete, activeIndex, onActive, format, onFormatChange, gradientDragging, onGradientDragging]);\n  const presetContext = React.useMemo(() => ({\n    prefixCls,\n    value,\n    presets,\n    onChange\n  }), [prefixCls, value, presets, onChange]);\n  // ====================== Render ======================\n  const innerPanel = /*#__PURE__*/React.createElement(\"div\", {\n    className: `${colorPickerPanelPrefixCls}-content`\n  }, /*#__PURE__*/React.createElement(PanelPicker, null), Array.isArray(presets) && /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(PanelPresets, null));\n  return /*#__PURE__*/React.createElement(PanelPickerContext.Provider, {\n    value: panelContext\n  }, /*#__PURE__*/React.createElement(PanelPresetsContext.Provider, {\n    value: presetContext\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPickerPanelPrefixCls\n  }, typeof panelRender === 'function' ? panelRender(innerPanel, {\n    components: {\n      Picker: PanelPicker,\n      Presets: PanelPresets\n    }\n  }) : innerPanel)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ColorPickerPanel.displayName = 'ColorPickerPanel';\n}\nexport default ColorPickerPanel;","map":{"version":3,"names":["React","Divider","PanelPicker","PanelPresets","PanelPickerContext","PanelPresetsContext","ColorPickerPanel","props","prefixCls","presets","panelRender","value","onChange","onClear","allowClear","disabledAlpha","mode","onModeChange","modeOptions","onChangeComplete","activeIndex","onActive","format","onFormatChange","gradientDragging","onGradientDragging","colorPickerPanelPrefixCls","panelContext","useMemo","presetContext","innerPanel","createElement","className","Array","isArray","Provider","components","Picker","Presets","process","env","NODE_ENV","displayName"],"sources":["/Users/abhib/Documents/LlamaHackathon2024/timeline_of_me_frontend/node_modules/antd/es/color-picker/ColorPickerPanel.js"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport Divider from '../divider';\nimport PanelPicker from './components/PanelPicker';\nimport PanelPresets from './components/PanelPresets';\nimport { PanelPickerContext, PanelPresetsContext } from './context';\nconst ColorPickerPanel = props => {\n  const {\n    prefixCls,\n    presets,\n    panelRender,\n    value,\n    onChange,\n    onClear,\n    allowClear,\n    disabledAlpha,\n    mode,\n    onModeChange,\n    modeOptions,\n    onChangeComplete,\n    activeIndex,\n    onActive,\n    format,\n    onFormatChange,\n    gradientDragging,\n    onGradientDragging\n  } = props;\n  const colorPickerPanelPrefixCls = `${prefixCls}-inner`;\n  // ===================== Context ======================\n  const panelContext = React.useMemo(() => ({\n    prefixCls,\n    value,\n    onChange,\n    onClear,\n    allowClear,\n    disabledAlpha,\n    mode,\n    onModeChange,\n    modeOptions,\n    onChangeComplete,\n    activeIndex,\n    onActive,\n    format,\n    onFormatChange,\n    gradientDragging,\n    onGradientDragging\n  }), [prefixCls, value, onChange, onClear, allowClear, disabledAlpha, mode, onModeChange, modeOptions, onChangeComplete, activeIndex, onActive, format, onFormatChange, gradientDragging, onGradientDragging]);\n  const presetContext = React.useMemo(() => ({\n    prefixCls,\n    value,\n    presets,\n    onChange\n  }), [prefixCls, value, presets, onChange]);\n  // ====================== Render ======================\n  const innerPanel = /*#__PURE__*/React.createElement(\"div\", {\n    className: `${colorPickerPanelPrefixCls}-content`\n  }, /*#__PURE__*/React.createElement(PanelPicker, null), Array.isArray(presets) && /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(PanelPresets, null));\n  return /*#__PURE__*/React.createElement(PanelPickerContext.Provider, {\n    value: panelContext\n  }, /*#__PURE__*/React.createElement(PanelPresetsContext.Provider, {\n    value: presetContext\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPickerPanelPrefixCls\n  }, typeof panelRender === 'function' ? panelRender(innerPanel, {\n    components: {\n      Picker: PanelPicker,\n      Presets: PanelPresets\n    }\n  }) : innerPanel)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ColorPickerPanel.displayName = 'ColorPickerPanel';\n}\nexport default ColorPickerPanel;"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,kBAAkB,EAAEC,mBAAmB,QAAQ,WAAW;AACnE,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;EAChC,MAAM;IACJC,SAAS;IACTC,OAAO;IACPC,WAAW;IACXC,KAAK;IACLC,QAAQ;IACRC,OAAO;IACPC,UAAU;IACVC,aAAa;IACbC,IAAI;IACJC,YAAY;IACZC,WAAW;IACXC,gBAAgB;IAChBC,WAAW;IACXC,QAAQ;IACRC,MAAM;IACNC,cAAc;IACdC,gBAAgB;IAChBC;EACF,CAAC,GAAGlB,KAAK;EACT,MAAMmB,yBAAyB,GAAG,GAAGlB,SAAS,QAAQ;EACtD;EACA,MAAMmB,YAAY,GAAG3B,KAAK,CAAC4B,OAAO,CAAC,OAAO;IACxCpB,SAAS;IACTG,KAAK;IACLC,QAAQ;IACRC,OAAO;IACPC,UAAU;IACVC,aAAa;IACbC,IAAI;IACJC,YAAY;IACZC,WAAW;IACXC,gBAAgB;IAChBC,WAAW;IACXC,QAAQ;IACRC,MAAM;IACNC,cAAc;IACdC,gBAAgB;IAChBC;EACF,CAAC,CAAC,EAAE,CAACjB,SAAS,EAAEG,KAAK,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,UAAU,EAAEC,aAAa,EAAEC,IAAI,EAAEC,YAAY,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,kBAAkB,CAAC,CAAC;EAC7M,MAAMI,aAAa,GAAG7B,KAAK,CAAC4B,OAAO,CAAC,OAAO;IACzCpB,SAAS;IACTG,KAAK;IACLF,OAAO;IACPG;EACF,CAAC,CAAC,EAAE,CAACJ,SAAS,EAAEG,KAAK,EAAEF,OAAO,EAAEG,QAAQ,CAAC,CAAC;EAC1C;EACA,MAAMkB,UAAU,GAAG,aAAa9B,KAAK,CAAC+B,aAAa,CAAC,KAAK,EAAE;IACzDC,SAAS,EAAE,GAAGN,yBAAyB;EACzC,CAAC,EAAE,aAAa1B,KAAK,CAAC+B,aAAa,CAAC7B,WAAW,EAAE,IAAI,CAAC,EAAE+B,KAAK,CAACC,OAAO,CAACzB,OAAO,CAAC,IAAI,aAAaT,KAAK,CAAC+B,aAAa,CAAC9B,OAAO,EAAE,IAAI,CAAC,EAAE,aAAaD,KAAK,CAAC+B,aAAa,CAAC5B,YAAY,EAAE,IAAI,CAAC,CAAC;EACxL,OAAO,aAAaH,KAAK,CAAC+B,aAAa,CAAC3B,kBAAkB,CAAC+B,QAAQ,EAAE;IACnExB,KAAK,EAAEgB;EACT,CAAC,EAAE,aAAa3B,KAAK,CAAC+B,aAAa,CAAC1B,mBAAmB,CAAC8B,QAAQ,EAAE;IAChExB,KAAK,EAAEkB;EACT,CAAC,EAAE,aAAa7B,KAAK,CAAC+B,aAAa,CAAC,KAAK,EAAE;IACzCC,SAAS,EAAEN;EACb,CAAC,EAAE,OAAOhB,WAAW,KAAK,UAAU,GAAGA,WAAW,CAACoB,UAAU,EAAE;IAC7DM,UAAU,EAAE;MACVC,MAAM,EAAEnC,WAAW;MACnBoC,OAAO,EAAEnC;IACX;EACF,CAAC,CAAC,GAAG2B,UAAU,CAAC,CAAC,CAAC;AACpB,CAAC;AACD,IAAIS,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCnC,gBAAgB,CAACoC,WAAW,GAAG,kBAAkB;AACnD;AACA,eAAepC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}