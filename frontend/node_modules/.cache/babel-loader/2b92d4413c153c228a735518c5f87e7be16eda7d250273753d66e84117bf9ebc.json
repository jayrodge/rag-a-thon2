{"ast":null,"code":"import { polarToCartesian } from '../PolarUtils';\nimport { getRadialCursorPoints } from './getRadialCursorPoints';\nexport function getCursorPoints(layout, activeCoordinate, offset) {\n  var x1, y1, x2, y2;\n  if (layout === 'horizontal') {\n    x1 = activeCoordinate.x;\n    x2 = x1;\n    y1 = offset.top;\n    y2 = offset.top + offset.height;\n  } else if (layout === 'vertical') {\n    y1 = activeCoordinate.y;\n    y2 = y1;\n    x1 = offset.left;\n    x2 = offset.left + offset.width;\n  } else if (activeCoordinate.cx != null && activeCoordinate.cy != null) {\n    if (layout === 'centric') {\n      var cx = activeCoordinate.cx,\n        cy = activeCoordinate.cy,\n        innerRadius = activeCoordinate.innerRadius,\n        outerRadius = activeCoordinate.outerRadius,\n        angle = activeCoordinate.angle;\n      var innerPoint = polarToCartesian(cx, cy, innerRadius, angle);\n      var outerPoint = polarToCartesian(cx, cy, outerRadius, angle);\n      x1 = innerPoint.x;\n      y1 = innerPoint.y;\n      x2 = outerPoint.x;\n      y2 = outerPoint.y;\n    } else {\n      return getRadialCursorPoints(activeCoordinate);\n    }\n  }\n  return [{\n    x: x1,\n    y: y1\n  }, {\n    x: x2,\n    y: y2\n  }];\n}","map":{"version":3,"names":["polarToCartesian","getRadialCursorPoints","getCursorPoints","layout","activeCoordinate","offset","x1","y1","x2","y2","x","top","height","y","left","width","cx","cy","innerRadius","outerRadius","angle","innerPoint","outerPoint"],"sources":["/Users/abhib/Documents/LlamaHackathon2024/timeline_of_me_frontend/node_modules/recharts/es6/util/cursor/getCursorPoints.js"],"sourcesContent":["import { polarToCartesian } from '../PolarUtils';\nimport { getRadialCursorPoints } from './getRadialCursorPoints';\nexport function getCursorPoints(layout, activeCoordinate, offset) {\n  var x1, y1, x2, y2;\n  if (layout === 'horizontal') {\n    x1 = activeCoordinate.x;\n    x2 = x1;\n    y1 = offset.top;\n    y2 = offset.top + offset.height;\n  } else if (layout === 'vertical') {\n    y1 = activeCoordinate.y;\n    y2 = y1;\n    x1 = offset.left;\n    x2 = offset.left + offset.width;\n  } else if (activeCoordinate.cx != null && activeCoordinate.cy != null) {\n    if (layout === 'centric') {\n      var cx = activeCoordinate.cx,\n        cy = activeCoordinate.cy,\n        innerRadius = activeCoordinate.innerRadius,\n        outerRadius = activeCoordinate.outerRadius,\n        angle = activeCoordinate.angle;\n      var innerPoint = polarToCartesian(cx, cy, innerRadius, angle);\n      var outerPoint = polarToCartesian(cx, cy, outerRadius, angle);\n      x1 = innerPoint.x;\n      y1 = innerPoint.y;\n      x2 = outerPoint.x;\n      y2 = outerPoint.y;\n    } else {\n      return getRadialCursorPoints(activeCoordinate);\n    }\n  }\n  return [{\n    x: x1,\n    y: y1\n  }, {\n    x: x2,\n    y: y2\n  }];\n}"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,eAAe;AAChD,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,OAAO,SAASC,eAAeA,CAACC,MAAM,EAAEC,gBAAgB,EAAEC,MAAM,EAAE;EAChE,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EAClB,IAAIN,MAAM,KAAK,YAAY,EAAE;IAC3BG,EAAE,GAAGF,gBAAgB,CAACM,CAAC;IACvBF,EAAE,GAAGF,EAAE;IACPC,EAAE,GAAGF,MAAM,CAACM,GAAG;IACfF,EAAE,GAAGJ,MAAM,CAACM,GAAG,GAAGN,MAAM,CAACO,MAAM;EACjC,CAAC,MAAM,IAAIT,MAAM,KAAK,UAAU,EAAE;IAChCI,EAAE,GAAGH,gBAAgB,CAACS,CAAC;IACvBJ,EAAE,GAAGF,EAAE;IACPD,EAAE,GAAGD,MAAM,CAACS,IAAI;IAChBN,EAAE,GAAGH,MAAM,CAACS,IAAI,GAAGT,MAAM,CAACU,KAAK;EACjC,CAAC,MAAM,IAAIX,gBAAgB,CAACY,EAAE,IAAI,IAAI,IAAIZ,gBAAgB,CAACa,EAAE,IAAI,IAAI,EAAE;IACrE,IAAId,MAAM,KAAK,SAAS,EAAE;MACxB,IAAIa,EAAE,GAAGZ,gBAAgB,CAACY,EAAE;QAC1BC,EAAE,GAAGb,gBAAgB,CAACa,EAAE;QACxBC,WAAW,GAAGd,gBAAgB,CAACc,WAAW;QAC1CC,WAAW,GAAGf,gBAAgB,CAACe,WAAW;QAC1CC,KAAK,GAAGhB,gBAAgB,CAACgB,KAAK;MAChC,IAAIC,UAAU,GAAGrB,gBAAgB,CAACgB,EAAE,EAAEC,EAAE,EAAEC,WAAW,EAAEE,KAAK,CAAC;MAC7D,IAAIE,UAAU,GAAGtB,gBAAgB,CAACgB,EAAE,EAAEC,EAAE,EAAEE,WAAW,EAAEC,KAAK,CAAC;MAC7Dd,EAAE,GAAGe,UAAU,CAACX,CAAC;MACjBH,EAAE,GAAGc,UAAU,CAACR,CAAC;MACjBL,EAAE,GAAGc,UAAU,CAACZ,CAAC;MACjBD,EAAE,GAAGa,UAAU,CAACT,CAAC;IACnB,CAAC,MAAM;MACL,OAAOZ,qBAAqB,CAACG,gBAAgB,CAAC;IAChD;EACF;EACA,OAAO,CAAC;IACNM,CAAC,EAAEJ,EAAE;IACLO,CAAC,EAAEN;EACL,CAAC,EAAE;IACDG,CAAC,EAAEF,EAAE;IACLK,CAAC,EAAEJ;EACL,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}